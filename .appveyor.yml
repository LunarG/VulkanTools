# Windows Build Configuration for AppVeyor
# http://www.appveyor.com/docs/appveyor-yml
#

# This version starts a separte job for each platform config
# in order to get around the AppVeyor limit of 60 mins per job.

shallow_clone: true

platform:
  - Win32
  - x64

configuration:
  - Debug
  - Release

image:
  - Visual Studio 2015
  - Visual Studio 2017
  - Visual Studio 2019

environment:
  PYTHON_PATH: "C:/Python35"
  PYTHON_PACKAGE_PATH: "C:/Python35/Scripts"

branches:
  only:
    - master

before_build:
  - ps: |
      "SET PATH=C:\\Python35;C:\\Python35\\Scripts;%PATH%"

      if ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2013") {
          $env:generator="Visual Studio 12 2013"
      } 
      if ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2015") {
          $env:generator="Visual Studio 14 2015"
      } 
      if ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2017") {
          $env:generator="Visual Studio 15 2017"
      }
      if ("$env:APPVEYOR_JOB_NAME" -match "Image: Visual Studio 2019") {
          $env:generator="Visual Studio 16 2019"
      }

      echo Update external sources
      if ($env:PLATFORM -eq "x64") {
        set QTDIR=C:\Qt\5.9.9\msvc2017_64
        set PATH=%PATH%;%QTDIR%\bin
        $env:generator="$env:generator Win64"
        if (%CONFIGURATION% == Debug) {
          update_external_sources.bat --64 --debug
        }
        if (%CONFIGURATION% == Release) {
          update_external_sources.bat --64 --release
        }
      }
      if ($env:PLATFORM -eq "Win32") {
        set QTDIR=C:\Qt\5.9.9\msvc2017
        set PATH=%PATH%;%QTDIR%\bin
        if (%CONFIGURATION% == Debug) {
          update_external_sources.bat --32 --debug
        }
        if (%CONFIGURATION% == Release) {
          update_external_sources.bat --32 --release
        }
      }
      echo generator="$env:generator"

      echo Build VulkanTools deps
      python scripts/update_deps.py --config=%CONFIGURATION% --arch=%PLATFORM%
      mkdir build
      cd build
      cmake -G "$env:generator" -C../helper.cmake ..
      echo Building platform=%PLATFORM% configuration=%CONFIGURATION%

      echo Build vkconfig with Qt framework
      cd ../vkconfig
      qmake vkconfig.pro
      nmake

build:
  parallel: true
  verbosity: quiet

build_script:
  - cmake --build . --config %CONFIGURATION% -- /m /v:minimal

# Build only x64 Release and Win32(x86) Debug to reduce build time.
# This should still provide adequate 32-bit vs 64-bit and
# Release vs Debug coverage.
matrix:
  exclude:
    - configuration: Release
      platform: Win32
    - configuration: Debug
      platform: x64

test_script:
  ctest -j 16 --output-on-failure -C %CONFIGURATION%


deploy: off
