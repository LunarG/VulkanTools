# Build Configuration for Travis CI
# https://travis-ci.org

dist: trusty
sudo: required
language: cpp

matrix:
  # Show final status immediately if a test fails.
  fast_finish: true
  include:
    # Android build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=ANDROID ANDROID_TARGET=android-23 ANDROID_ABI=armeabi-v7a
    # Android 64-bit build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=ANDROID ANDROID_TARGET=android-23 ANDROID_ABI=arm64-v8a
    # Linux GCC debug build.
    - os: linux
      compiler: gcc
      env: VULKAN_BUILD_TARGET=LINUX
    # Linux clang debug build.
    - os: linux
      compiler: clang
      env: VULKAN_BUILD_TARGET=LINUX
    # Check for proper clang formatting in the pull request.
    - env: CHECK_FORMAT=ON

cache: ccache

# Use set -e so that the build fails when a command fails.
# The default action for Travis-CI is to continue running even if a command fails.
# See https://github.com/travis-ci/travis-ci/issues/1066.
# Use the YAML block scalar header (|) to allow easier multiline script coding.

before_install:
  - set -e
  # Install the appropriate Linux packages.
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then
      sudo apt-get -qq update
      sudo apt-get -y install libxkbcommon-dev libwayland-dev libmirclient-dev libxrandr-dev libx11-xcb-dev libxcb-keysyms1 libxcb-keysyms1-dev
      # Needed for devsim test
      sudo apt-get -y install jq
    fi
  # Install the Android NDK.
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then
      export ARCH=`uname -m`
      wget http://dl.google.com/android/repository/android-ndk-r15c-linux-${ARCH}.zip
      unzip -u -q android-ndk-r15c-linux-${ARCH}.zip
      export ANDROID_NDK_HOME=`pwd`/android-ndk-r15c
      export JAVA_HOME="/usr/lib/jvm/java-8-oracle"
      export PATH="$ANDROID_NDK_HOME:$PATH"
    fi
  # Install the clang format diff tool, but only for pull requests.
  - |
    if [[ "$CHECK_FORMAT" == "ON" && "$TRAVIS_PULL_REQUEST" != "false" ]]; then
      curl -L http://llvm.org/svn/llvm-project/cfe/trunk/tools/clang-format/clang-format-diff.py -o scripts/clang-format-diff.py;
    fi
  # Misc setup
  - |
  - export core_count=$(nproc || echo 4) && echo core_count = $core_count
  - set +e

script:
  - set -e
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then
      # Build VulkanTools deps
      git clone https://github.com/KhronosGroup/Vulkan-Headers.git
      pushd Vulkan-Headers
      mkdir build
      cd build
      cmake -DCMAKE_INSTALL_PREFIX=install ..
      cmake --build . --target install
      popd
      git clone https://github.com/KhronosGroup/Vulkan-Loader.git
      pushd Vulkan-Loader
      mkdir build
      cd build
      cmake -DCMAKE_BUILD_TYPE=Debug -DVULKAN_HEADERS_INSTALL_DIR=$TRAVIS_BUILD_DIR/Vulkan-Headers/build/install -DCMAKE_INSTALL_PREFIX=install ..
      cmake --build . --target install
      popd
      git clone https://github.com/KhronosGroup/glslang.git
      pushd glslang
      ./update_glslang_sources.py
      mkdir build
      cd build
      cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=install ..
      cmake --build . --target install -- -j $core_count
      popd
    fi
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then
      # Build VulkanTools
      ./update_external_sources.sh
      git clone https://github.com/google/googletest.git submodules/Vulkan-ValidationLayers/external/googletest
      mkdir dbuild
      pushd dbuild
      cmake -DCMAKE_BUILD_TYPE=Debug \
          -DGLSLANG_INSTALL_DIR=$TRAVIS_BUILD_DIR/glslang/build/install \
          -DVULKAN_HEADERS_INSTALL_DIR=$TRAVIS_BUILD_DIR/Vulkan-Headers/build/install \
          -DVULKAN_LOADER_INSTALL_DIR=$TRAVIS_BUILD_DIR/Vulkan-Loader/build/install \
          ..
      cmake --build . -- -j $core_count
      popd
    fi
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "LINUX" ]]; then
      # Run Tests
      VL_BUILD=$TRAVIS_BUILD_DIR/dbuild/submodules/Vulkan-ValidationLayers
      VT_BUILD=$TRAVIS_BUILD_DIR/dbuild/submodules/Vulkan-Tools
      DEVSIM_PROFILES=$TRAVIS_BUILD_DIR/submodules/Vulkan-ValidationLayers/tests/device_profiles
      export VK_LAYER_PATH=$VL_BUILD/layers:$TRAVIS_BUILD_DIR/dbuild/layersvt
      export VK_ICD_FILENAMES=$VT_BUILD/icd/VkICD_mock_icd.json
      # Run vlf_test with mock ICD to ensure layer factory is working
      dbuild/tests/vlf_test.sh
      # Run apidump_test with mock ICD to ensure apidump layer is working
      dbuild/tests/apidump_test.sh
      # Run devsim tests with mock ICD to ensure devsim is working
      dbuild/tests/devsim_layer_test.sh
      # Run validation layer tests with mock ICD, some with devsim.
      # These tests are redundant with Vulkan-ValidationLayer testing,
      # but there is still some value with running them again here.
      echo "Running validation layer tests with mock ICD and no devsim."
      $VL_BUILD/tests/vk_layer_validation_tests
      for filename in $DEVSIM_PROFILES/*.json; do
        echo "Running validation layer test with mock ICD and devsim profile $(basename "$filename" .json)."
        VK_DEVSIM_FILENAME=$filename $VL_BUILD/tests/vk_layer_validation_tests --devsim
      done
    fi
  - |
    if [[ "$VULKAN_BUILD_TARGET" == "ANDROID" ]]; then
      pushd build-android
      ./update_external_sources_android.sh --abi $ANDROID_ABI --no-build
      ./android-generate.sh
      USE_CCACHE=1 NDK_CCACHE=ccache ndk-build APP_ABI=$ANDROID_ABI -j $core_count
      popd
    fi
  # Run the clang format check only for pull request builds because the
  # master branch is needed to do the git diff.
  - |
    if [[ "$CHECK_FORMAT" == "ON" ]]; then
      if [[ "$TRAVIS_PULL_REQUEST" != "false" ]]; then
        echo "Checking clang-format between TRAVIS_BRANCH=$TRAVIS_BRANCH and TRAVIS_PULL_REQUEST_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH"
        ./submodules/Vulkan-ValidationLayers/scripts/check_code_format.sh
      else
        echo "Skipping clang-format check since this is not a pull request."
      fi
    fi
  - set +e

notifications:
  email:
    recipients:
      - karl@lunarg.com
      - cnorthrop@google.com
    on_success: change
    on_failure: always
